{
  "openapi": "3.0.0",
  "info": {
    "title": "AppHub API",
    "description": "AppHub API",
    "contact": {
      "email": "lsjustin89@gmail.com"
    },
    "license": {
      "name": "GNU General Public License v3.0",
      "url": "https://github.com/myapphub/apphub/blob/main/LICENSE"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "{{ url }}"
    }
  ],
  "tags": [
    {
      "name": "user"
    },
    {
      "name": "organization"
    },
    {
      "name": "application"
    },
    {
      "name": "distribute"
    },
    {
      "name": "workflow"
    }
  ],
  "paths": {
    "/user/auth/config": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user auth config",
        "responses": {
          "201": {
            "description": "user auth configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register an user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing username already exists"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Logout",
        "responses": {
          "204": {
            "description": "Logout success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get my user info",
        "responses": {
          "200": {
            "description": "Get my user info.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update my user info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "My user info updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "an existing username already exists"
          }
        }
      }
    },
    "/user/avatar": {
      "post": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Change my avatar",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "my avatar",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "my avatar"
              }
            }        
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get an user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user/email/request_verify": {
      "post": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Request verify email",
        "responses": {
          "204": {
            "description": "verfiy email sent"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/email/verify": {
      "post": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Verify email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Email verified"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/password/request_reset": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Request reset password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Reset password email sent"
          },
          "400": {
            "description": "invalid input, object invalid"
          }
        }
      }
    },
    "/user/password/reset": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Reset password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Reset password"
          },
          "400": {
            "description": "invalid input, object invalid"
          }
        }
      }
    },
    "/user/password/change": {
      "post": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Change password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "new_password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Change password"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/orgs": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "organization"
        ],
        "summary": "List organizations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "organization list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      },
      "post": {
        "tags": [
          "organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adds an organization to the system",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the organization"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/orgs/{path}": {
      "get": {
        "tags": [
          "organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get an organization",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update organization",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "delete": {
        "tags": [
          "organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Remove organization",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orgs/{path}/icons": {
      "post": {
        "tags": [
          "organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Set the organization icon",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "icon_file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "organization icon",
            "headers": [
              {
                "location": {
                  "schema": {
                    "type": "string",
                    "format": "url"
                  },
                  "description": "organization icon"
                }
              }
            ]
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/orgs/{path}/members": {
      "get": {
        "tags": [
          "organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get organization members",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "organization member list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationUserResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adds an user to the organization",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the organization member"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/orgs/{path}/members/{username}": {
      "get": {
        "tags": [
          "organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the organization member",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the organization member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the organization member",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the organization member",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apps": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "application"
        ],
        "summary": "List visible applications",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      }
    },
    "/user/apps": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "application"
        ],
        "summary": "List applications for the authenticated user",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      },
      "post": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adds an application to the user",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the application"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/users/{username}/apps": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "application"
        ],
        "summary": "List the user's applications",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      }
    },
    "/users/{username}/apps/{path}": {
      "get": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get an application",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update application",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "delete": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Remove application",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/icons": {
      "post": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Set the application icon",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "icon_file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "application icon",
            "headers": [
              {
                "location": {
                  "schema": {
                    "type": "string",
                    "format": "url"
                  },
                  "description": "application icon"
                }
              }
            ]
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/members": {
      "get": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get application members",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application member list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationUserResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adds an user to the application",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the application member"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/members/{member_name}": {
      "get": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the application member",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member_name",
            "in": "path",
            "description": "The member's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the application member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the application member",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member_name",
            "in": "path",
            "description": "The member's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the application member",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member_name",
            "in": "path",
            "description": "The member's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/tokens": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "application"
        ],
        "summary": "List the application's tokens",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application token list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationTokenResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      },
      "post": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adds a token to the application",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the application token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/tokens/{token_id}": {
      "get": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the application token",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "The token's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the application token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTokenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the application token",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "The token's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the application token",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "The token's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/webhooks": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "application"
        ],
        "summary": "List the application's webhooks",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application webhook list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationWebhookResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      },
      "post": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adds a webhook to the application",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the application webhook"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the application webhook",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The webhook's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the application webhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationWebhookResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the application webhook",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The webhook's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the application webhook",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The webhook's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orgs/{org_path}/apps": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "application"
        ],
        "summary": "List the organization's applications",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      },
      "post": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adds an application to the organization",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the application"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}": {
      "get": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get an application",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update application",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "delete": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Remove application",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/icons": {
      "post": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Set the application icon",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "icon_file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "application icon",
            "headers": [
              {
                "location": {
                  "schema": {
                    "type": "string",
                    "format": "url"
                  },
                  "description": "application icon"
                }
              }
            ]
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/members": {
      "get": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get application members",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application member list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationUserResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adds an user to the application",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the application member"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/members/{member_name}": {
      "get": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the application member",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member_name",
            "in": "path",
            "description": "The member's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the application member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the application member",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member_name",
            "in": "path",
            "description": "The member's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the application member",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member_name",
            "in": "path",
            "description": "The member's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/tokens": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "application"
        ],
        "summary": "List the application's tokens",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application token list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationTokenResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      },
      "post": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adds a token to the application",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the application token"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/tokens/{token_id}": {
      "get": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the application token",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "The token's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the application token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTokenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the application token",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "The token's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the application token",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "The token's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/webhooks": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "application"
        ],
        "summary": "List the application's webhooks",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application webhook list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationWebhookResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      },
      "post": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adds a webhook to the application",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the application webhook"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the application webhook",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The webhook's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the application webhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationWebhookResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the application webhook",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The webhook's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "application"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the application webhook",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The webhook's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/download/{slug}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "distribute"
        ],
        "summary": "Get the app detail by slug",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The app's slug",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "item detail.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/download/{slug}/packages": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "distribute"
        ],
        "summary": "List the packages",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The app's slug",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "os",
            "in": "query",
            "description": "os",
            "required": false,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "Android",
                "iOS",
                "macOS",
                "tvOS",
                "Windows",
                "Linux"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application package list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      }
    },
    "/download/{slug}/packages/latest": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "distribute"
        ],
        "summary": "Get the latest package",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The app's slug",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "os",
            "in": "query",
            "description": "os",
            "required": false,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "Android",
                "iOS",
                "macOS",
                "tvOS",
                "Windows",
                "Linux"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the package",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      }
    },
    "/download/{slug}/packages/{package_id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "distribute"
        ],
        "summary": "Get the package by package_id",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The app's slug",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "package_id",
            "in": "path",
            "description": "The package's package_id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "tye package",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      }
    },
    "/users/{username}/apps/{path}/packages": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "distribute"
        ],
        "summary": "List the packages",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application package list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      }
    },
    "/users/{username}/apps/{path}/packages/upload_via_file": {
      "post": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Upload a package to the application",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PackageFileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the package"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/packages/upload_via_url": {
      "post": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Upload a package via url",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageUrlRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the package"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/packages/{package_id}": {
      "get": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the package",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "package_id",
            "in": "path",
            "description": "The package's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the package",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the package",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "package_id",
            "in": "path",
            "description": "The package's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the package",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "package_id",
            "in": "path",
            "description": "The package's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/releases": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "distribute"
        ],
        "summary": "List the releases",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application release list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReleaseResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      },
      "post": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Release a new version",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the release"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/users/{username}/apps/{path}/releases/{release_id}": {
      "get": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the release",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release_id",
            "in": "path",
            "description": "The release's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the application release",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the release",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release_id",
            "in": "path",
            "description": "The release's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the application release",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release_id",
            "in": "path",
            "description": "The release's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/packages": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "distribute"
        ],
        "summary": "List the packages",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "package list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/packages/upload_via_file": {
      "post": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Upload a package to the application",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PackageFileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the package"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/packages/upload_via_url": {
      "post": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Upload a package via url",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageUrlRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the package"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/packages/{package_id}": {
      "get": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the package",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "package_id",
            "in": "path",
            "description": "The package's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the package",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the package",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "package_id",
            "in": "path",
            "description": "The package's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackageUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the package",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "package_id",
            "in": "path",
            "description": "The package's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/releases": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "distribute"
        ],
        "summary": "List the releases",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items to list per page (default 10, max 100).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The If-Modified-Since request HTTP header makes the request conditional, the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body. <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since</a>",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "Wed, 21 Oct 2021 07:28:00 GMT"
          }
        ],
        "responses": {
          "200": {
            "description": "application release list",
            "headers": {
              "X-Total-Count": {
                "description": "The total number of items.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReleaseResponse"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified."
          }
        }
      },
      "post": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Release a new version",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "url"
                },
                "description": "the release"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/orgs/{org_path}/apps/{path}/releases/{release_id}": {
      "get": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the release",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release_id",
            "in": "path",
            "description": "The release's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the application release",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the release",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release_id",
            "in": "path",
            "description": "The release's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the application release",
        "parameters": [
          {
            "name": "org_path",
            "in": "path",
            "description": "The organization's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The app's path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release_id",
            "in": "path",
            "description": "The release's id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/aliyun/oss/callback/{uploader_type}/{uploader}/{slug}": {
      "post": {
        "tags": [
          "distribute"
        ],
        "summary": "Aliyun oss callback",
        "parameters": [
          {
            "name": "uploader_type",
            "in": "path",
            "description": "The uploader's type (user, token)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": ["user", "token"]
            }
          },
          {
            "name": "uploader",
            "in": "path",
            "description": "The app's install slug",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The app's install slug",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliyunOSSCallback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "the callback response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/aliyun/oss/request_upload/{slug}": {
      "post": {
        "tags": [
          "distribute"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Aliyun oss request upload",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The app's install slug",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUploadPackage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "the aliyun oss upload data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AliyunUploadToken"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "missing",
              "missing_field",
              "invalid",
              "already_exists",
              "unprocessable"
            ]
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error_errors"
            }
          }
        }
      },
      "UserAuthConfigResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "email",
              "ldap",
              "slack",
              "microsoft_teams",
              "dingtalk",
              "github",
              "gitlab",
              "work_weixin",
              "feishu"
            ]
          },
          "email_domain": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo": {
            "type": "string",
            "format": "url"
          },
          "auth_url": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "UserRegisterRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "required": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "UserLoginRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "required": true,
            "description": "username/email"
          },
          "password": {
            "type": "string",
            "required": true
          }
        }
      },
      "UserLoginResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "email_verified": {
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "url"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "email_verified": {
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "OrganizationRequest": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "format": "slug"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "Private",
              "Internal",
              "Public"
            ]
          }
        }
      },
      "OrganizationResponse": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "format": "slug"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "Private",
              "Internal",
              "Public"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "Owner",
              "Manager",
              "Developer",
              "Tester"
            ]
          },
          "update_time": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-08T05:57:18.184933Z"
          },
          "create_time": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-08T05:57:18.184933Z"
          }
        }
      },
      "OrganizationUserRequest": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "Owner",
              "Manager",
              "Developer",
              "Tester"
            ]
          },
          "username": {
            "type": "string"
          }
        }
      },
      "OrganizationUserUpdateRequest": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "Owner",
              "Manager",
              "Developer",
              "Tester"
            ]
          }
        }
      },
      "OrganizationUserResponse": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "Owner",
              "Manager",
              "Developer",
              "Tester"
            ]
          },
          "username": {
            "type": "string"
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApplicationRequest": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "format": "slug"
          },
          "name": {
            "type": "string"
          },
          "install_slug": {
            "type": "string",
            "format": "slug"
          },
          "description": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "Private",
              "Internal",
              "Public"
            ]
          },
          "enable_os": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Android",
                "iOS",
                "macOS",
                "tvOS",
                "Windows",
                "Linux"
              ]
            }
          }
        }
      },
      "ApplicationResponse": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "format": "slug"
          },
          "role": {
            "$ref": "#/components/schemas/RoleKind"
          },
          "name": {
            "type": "string"
          },
          "install_slug": {
            "type": "string",
            "format": "slug"
          },
          "description": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "Private",
              "Internal",
              "Public"
            ]
          },
          "enable_os": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Android",
                "iOS",
                "macOS",
                "tvOS",
                "Windows",
                "Linux"
              ]
            }
          },
          "icon_file": {
            "type": "string",
            "format": "url"
          },
          "update_time": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-08T05:57:18.184933Z"
          },
          "create_time": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-08T05:57:18.184933Z"
          }
        }
      },
      "ApplicationUserResponse": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "Owner",
              "Manager",
              "Developer",
              "Tester"
            ]
          },
          "username": {
            "type": "string"
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApplicationTokenRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "enable_upload_package": {
            "type": "boolean"
          },
          "enable_get_packages": {
            "type": "boolean"
          },
          "enable_get_releases": {
            "type": "boolean"
          },
          "enable_get_upgrades": {
            "type": "boolean"
          }
        }
      },
      "ApplicationTokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "enable_upload_package": {
            "type": "boolean"
          },
          "enable_get_packages": {
            "type": "boolean"
          },
          "enable_get_releases": {
            "type": "boolean"
          },
          "enable_get_upgrades": {
            "type": "boolean"
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApplicationWebhookRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "url"
          },
          "auth_data": {
            "type": "object"
          },
          "template": {
            "type": "object"
          },
          "when_new_package": {
            "type": "boolean"
          },
          "when_new_release": {
            "type": "boolean"
          },
          "when_new_upgrade": {
            "type": "boolean"
          },
          "when_store_state_change": {
            "type": "boolean"
          }
        }
      },
      "ApplicationWebhookResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "url"
          },
          "auth_data": {
            "type": "object"
          },
          "template": {
            "type": "object"
          },
          "when_new_package": {
            "type": "boolean"
          },
          "when_new_release": {
            "type": "boolean"
          },
          "when_new_upgrade": {
            "type": "boolean"
          },
          "when_store_state_change": {
            "type": "boolean"
          }
        }
      },
      "PackageFileRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          },
          "description": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          }
        }
      },
      "PackageUrlRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "url"
          },
          "description": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          }
        }
      },
      "PackageUpdateRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          }
        }
      },
      "RequestUploadPackage": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          }
        }
      },
      "AliyunOSSCallback": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          }
        }
      },
      "AliyunUploadToken": {
        "type": "object",
        "properties": {
          "access_key_id": {
            "type": "string"
          },
          "access_key_secret": {
            "type": "string"
          },
          "security_token": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "bucket": {
            "type": "string"
          },
          "key_prefix": {
            "type": "string"
          },
          "is_cname": {
            "type": "boolean"
          },
          "callback": {
            "type": "object",
            "properties": {
              "callback_url": {
                "type": "string",
                "format": "url"
              },
              "callback_body": {
                "type": "string"
              },
              "callback_body_type": {
                "type": "string"
              }
            }
          }
        }
      },
      "PackageResponse": {
        "type": "object",
        "properties": {
          "package_id": {
            "type": "integer"
          },
          "uploader": {
            "$ref": "#/components/schemas/Operator"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "package_file": {
            "type": "string",
            "format": "url"
          },
          "icon_file": {
            "type": "string",
            "format": "url"
          },
          "fingerprint": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "short_version": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "commit_id": {
            "type": "string"
          },
          "bundle_identifier": {
            "type": "string"
          },
          "min_os": {
            "type": "string"
          },
          "channle": {
            "type": "string"
          },
          "os": {
            "type": "string",
            "enum": [
              "Android",
              "iOS",
              "macOS",
              "tvOS",
              "Windows",
              "Linux"
            ]
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ReleaseRequest": {
        "type": "object",
        "properties": {
          "release_notes": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "package_id": {
            "type": "integer"
          }
        }
      },
      "ReleaseUpdateRequest": {
        "type": "object",
        "properties": {
          "release_notes": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "ReleaseResponse": {
        "type": "object",
        "properties": {
          "release_id": {
            "type": "number"
          },
          "release_notes": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "package_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "package_file": {
            "type": "string",
            "format": "url"
          },
          "icon_file": {
            "type": "string",
            "format": "url"
          },
          "fingerprint": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "short_version": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "commit_id": {
            "type": "string"
          },
          "bundle_identifier": {
            "type": "string"
          },
          "min_os": {
            "type": "string"
          },
          "channle": {
            "type": "string"
          },
          "os": {
            "type": "string",
            "enum": [
              "Android",
              "iOS",
              "macOS",
              "tvOS",
              "Windows",
              "Linux"
            ]
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Upgrade": {
        "type": "object",
        "properties": {
          "upgrade_id": {
            "type": "number"
          },
          "release_notes": {
            "type": "string"
          },
          "target_version": {
            "type": "string"
          },
          "mandatory": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "package_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "package_file": {
            "type": "string",
            "format": "url"
          },
          "icon_file": {
            "type": "string",
            "format": "url"
          },
          "fingerprint": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "short_version": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "commit_id": {
            "type": "string"
          },
          "bundle_identifier": {
            "type": "string"
          },
          "min_os": {
            "type": "string"
          },
          "channle": {
            "type": "string"
          },
          "os": {
            "type": "string",
            "enum": [
              "Android",
              "iOS",
              "macOS",
              "tvOS",
              "Windows",
              "Linux"
            ]
          },
          "update_time": {
            "type": "string",
            "format": "date-time"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Operator": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": ["User", "Token"]
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "namespace": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "format": "slug"
          },
          "kind": {
            "type": "string",
            "enum": [
              "User",
              "Organization"
            ]
          },
          "name": {
            "type": "string"
          }
        }
      },
      "RoleKind": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "Application",
              "Organization"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "Owner",
              "Manager",
              "Developer",
              "Tester"
            ]
          }
        }
      },
      "Error_errors": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          }
        },
        "example": null
      }
    }
  }
}